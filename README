##PgSanity

PgSanity checks the syntax of Postgresql SQL files.

It does this by leveraging the ecpg command which is traditionally
used for preparing C files with embedded sql for compilation.
However, as part of that preparation, ecpg checks the embedded SQL
statements for syntax errors using the exact same parser that is
in PostgreSQL.

So the approach that PgSanity takes is to take a file that has a
list of bare SQL in it, make that file look like a C file with
embedded SQL, run it through ecpg and let ecpg report on the syntax
errors of the SQL.

##Installation
###Dependencies
- Python >= 2.7
    - May work with Pythons < 2.7 if you install argparse (sudo pip install argparse)
- ecpg
    - ubuntu/debian: sudo apt-get install libecpg-dev
    - rhel/centos: sudo yum install postgresql-devel
    - arch: sudo pacman -S postgresql-libs

###Getting PgSanity
PgSanity is available in the Python Package Index, so you can install it with either easy_install or pip.  Here's [PgSanity's page on PyPI](http://pypi.python.org/pypi/pgsanity).
- sudo pip install pgsanity **or** sudo easy_install pgsanity

##Usage
PgSanity will accept a filename as a parameter and it will report SQL syntax errors which exist in that file.  PgSanity will exit with a status code of 0 if the syntax of the SQL looks good and a 1 if any errors were found.
 
    $ pgsanity file_with_sql.sql
 
Alternatively PgSanity will read SQL from stdin if it is not given any parameters.  This way it can be used interactively or by piping SQL through it.
 
    $ pgsanity
    select column1 alias2 asdf from table3
    line 1: ERROR: syntax error at or near "asdf"
    $ echo $?
    1
    $ echo "select mycol from mytable;" | pgsanity
    $ echo $?
    0

##Reporting Problems
If you encounter any problems with PgSanity, especially any issues where it incorrectly states that invalid SQL is valid or vice versa, please report the issue on [PgSanity's github page](http://github.com/markdrago/pgsanity).  Thanks!